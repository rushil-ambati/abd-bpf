#!/usr/bin/env bash
set -euo pipefail

NUM_SERVERS=3
TESTENV=(sudo -n tools/testenv/testenv.sh)

sudo -v || {
  echo "need sudo"
  exit 1
}

bg_pids=()
mkdir -p logs
rm -f logs/*

# Run command in background, tee its log, and stream to stdout
run_bg() {
  local name=$1
  shift
  local logfile="logs/${name}.log"
  : >"$logfile"

  "$@" >"$logfile" 2>&1 &
  bg_pids+=($!)

  tail -F "$logfile" &
  bg_pids+=($!)
}

cleanup() {
  for pid in "${bg_pids[@]}"; do
    kill "$pid" 2>/dev/null || true
    wait "$pid" 2>/dev/null || true
  done
}
trap cleanup EXIT SIGINT SIGTERM

usage() {
  echo "Usage: $0 [-s NUM_SERVERS]" >&2
  exit 1
}

while getopts "s:" opt; do
  case $opt in
  s) NUM_SERVERS=$OPTARG ;;
  *) usage ;;
  esac
done

# Build everything
cargo build --release

# Setup testenvs
for env in $(seq 1 "$NUM_SERVERS" | sed 's/^/server/') writer; do
  "${TESTENV[@]}" setup --name "$env" --legacy-ip >/dev/null 2>&1 || true

  # Disable UDP TX checksum offloading
  "${TESTENV[@]}" exec -n "$env" -- \
    bash -c "ethtool -K veth0 tx-checksum-ip-generic off >/dev/null 2>&1 || true"

  # Attach xdp-pass with warn-level logs
  run_bg "$env-veth0" "${TESTENV[@]}" exec -n "$env" -- \
    bash -c "RUST_LOG=warn target/release/xdp-pass --iface veth0"
done

# Run abd-server on each server
for i in $(seq 1 "$NUM_SERVERS"); do
  env="server$i"
  run_bg "$env-server" sudo -E bash -c \
    "RUST_LOG=info target/release/abd-server \
     --iface $env --num-servers=$NUM_SERVERS --server-id $i"
done

# Run abd-writer with info logging
run_bg "writer" sudo -E bash -c \
  "RUST_LOG=info target/release/abd-writer \
   --iface writer --num-servers=$NUM_SERVERS"

# Run abd-reader on server1
run_bg "reader1" sudo -E bash -c \
  "RUST_LOG=info target/release/abd-reader \
   --iface server1 --num-servers=$NUM_SERVERS --node-id 1"

# Wait for services to initialize
sleep 1

# Write
writer_ip=$(
  "${TESTENV[@]}" -n writer status |
    awk '/Iface:/ {print $4}' |
    cut -d'/' -f1
)
run_bg "client_write" "${TESTENV[@]}" exec -n writer -- bash -c "
  RUST_LOG=info target/release/abd-client write $writer_ip 42"

sleep 1

# Read
reader1_ip=$(
  "${TESTENV[@]}" -n server1 status |
    awk '/Iface:/ {print $4}' |
    cut -d'/' -f1
)
run_bg "client_read" "${TESTENV[@]}" exec -n server1 -- bash -c "
  RUST_LOG=info target/release/abd-client read $reader1_ip"

# Wait for all tasks
wait
