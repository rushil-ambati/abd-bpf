#!/usr/bin/env bash
set -euo pipefail

usage() {
  echo "Usage: $0 [-a]" >&2
  echo "  -a   Also teardown all testenv namespaces" >&2
  exit 1
}

# parse flags
TEARDOWN=false
while getopts ":a" opt; do
  case $opt in
  a) TEARDOWN=true ;;
  *) usage ;;
  esac
done

# pre‐cache sudo once
sudo -v || {
  echo "need sudo"
  exit 1
}

# always kill any leftover processes
sudo -n pkill -f "target/release/client" || true
sudo -n pkill -f "target/release/writer" || true
sudo -n pkill -f "target/release/server" || true
sudo -n pkill -f "target/release/xdp-pass" || true

if [[ "$TEARDOWN" = true ]]; then
  TESTENV="sudo -n tools/testenv/testenv.sh"

  # grab all the env names listed after "All existing environments:",
  # but bail out early if we see "No environments exist"
  ENVS=$(
    $TESTENV status |
      awk '
          /All existing environments:/ { p=1; next }
          p && NF {
            if ($1 == "No") exit
            print $1
          }
        '
  )

  if [[ -z "$ENVS" ]]; then
    echo "No testenvs found; nothing to teardown."
    exit 0
  fi

  for env in $ENVS; do
    echo "Tearing down testenv: $env"
    $TESTENV teardown --name "$env" || {
      echo "  ⚠️  failed to teardown $env, continuing…"
    }
  done
fi

echo "Done."
